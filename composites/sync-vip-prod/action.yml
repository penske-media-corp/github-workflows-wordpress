name: 'Sync to wpcomvip repo'
description: "Sync code to a brand's VIP repository"

inputs:
  destination_repo:
    description: 'Destination repository slug, including organization. eg, `wpcomvip/pmc`.'
    required: true
  destination_branch:
    description: 'Destination branch'
    required: true
  destination_directory:
    description: 'Destination directory, relative to repository root.'
    required: true
  GIT_EMAIL:
    description: 'Email address associated with GitHub user authoring commits.'
    required: true
  SSH_KEY:
    description: 'SSH key with access to source and destination repositories.'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Check out source repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        fetch-depth: 1
        path: 'source'
    - name: Check out destination repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.destination_repo }}
        ref: ${{ inputs.destination_branch }}
        fetch-depth: 1
        path: 'dest'
        ssh-key: ${{ inputs.SSH_KEY }}
    - name: Check out utility scripts
      uses: actions/checkout@v4
      with:
        repository: "penske-media-corp/pmc-jenkins-scripts"
        fetch-depth: 1
        path: 'jenkins-scripts'
        ssh-key: ${{ inputs.SSH_KEY }}
    - name: Debug
      shell: bash
      run: |
        ls -lah "$GITHUB_WORKSPACE"
        ls -lah "$GITHUB_WORKSPACE/source"
        ls -lah "$GITHUB_WORKSPACE/dest"
        ls -lah "$GITHUB_WORKSPACE/jenkins-scripts"
    - name: Sync files
      shell: bash
      run: |
        source "$GITHUB_WORKSPACE/jenkins-scripts/bin/functions.sh"

        # TODO: excludes? If used for `plugins` dir, use `exclude/restore_plugins`. How to flag? Also, how to handle the BGR situation?

        git -C "$GITHUB_WORKSPACE/dest" config --local user.name "pmcvipgo-sync"
        git -C "$GITHUB_WORKSPACE/dest" config --local user.email "${{ inputs.GIT_EMAIL }}"

        if [[ ! -d "$GITHUB_WORKSPACE/dest/${{ inputs.destination_directory }}" ]]; then
          mkdir -p "$GITHUB_WORKSPACE/dest/${{ inputs.destination_directory }}"
        fi

        rsync_repo_files "$GITHUB_WORKSPACE/source" "$GITHUB_WORKSPACE/dest/${{ inputs.destination_directory }}"

        setup_git_committer "$GITHUB_WORKSPACE/source" "$GITHUB_WORKSPACE/dest"

        git -C "$GITHUB_WORKSPACE/dest" add --all

        if [[ '' == $(git -C "$GITHUB_WORKSPACE/dest" status --porcelain) ]]; then
          echo "No changes to commit"
          exit 0
        fi

        git -C "$GITHUB_WORKSPACE/dest" status

        git -C "$GITHUB_WORKSPACE/dest" commit -m "Sync from ${{ github.repository }}:${{ github.ref_name }} for revision ${REVISION} by ${AUTHOR}"

        git -C "$GITHUB_WORKSPACE/dest" push origin ${{ inputs.destination_branch }}
