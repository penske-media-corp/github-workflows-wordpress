name: 'Checkly QAT'

on:
  workflow_call:
    inputs:
      QA_SITE_DOMAIN:
        default: ''
        description: 'QA Site Domain'
        required: true
        type: string
      THEME_NAME:
        default: ''
        description: 'WP Theme'
        required: true
        type: string

    secrets:
      CHECKLY_API_KEY:
        required: true
      CHECKLY_ACCOUNT_ID:
        required: true

permissions:
  contents: read

# Set the necessary credentials and export variables we can use to instrument our test run. Use the ENVIRONMENT_URL
# to run your checks against staging, preview or production.
env:
  CHECKLY_API_KEY: ${{ secrets.CHECKLY_API_KEY }}
  CHECKLY_ACCOUNT_ID: ${{ secrets.CHECKLY_ACCOUNT_ID }}
  ENVIRONMENT_URL: ${{ inputs.QA_SITE_DOMAIN }}
  CHECKLY_REPO_BRANCH: ${{ github.head_ref || github.ref }}
jobs:
  checkly-deploy:
    name: Checkly Run and Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 90
    if: ${{ github.repository != 'penske-media-corp/github-workflows-wordpress' }}

    concurrency:
      group: ${{ github.ref_name || github.run_id }}-checkly-qat
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Restore or cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run checks # run the checks passing in the ENVIRONMENT_URL and recording a test session.
        # continue-on-error: true
        id: run-checks
        run: npx checkly test -e ENVIRONMENT_URL=${{ env.ENVIRONMENT_URL }} --reporter=github --record
      - name: Create summary # export the markdown report to the job summary.
        if: always()
        id: create-summary
        run: cat checkly-github-report.md > $GITHUB_STEP_SUMMARY
      - name: Deploy checks
        if: always()
        id: deploy-checks
        run: npx checkly deploy --force
