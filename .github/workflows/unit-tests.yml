name: Unit Tests

on:
  workflow_call:
    secrets:
      BITBUCKET_READ_ONLY_SSH_KEY:
        required: true


# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: ${{ github.event_name == 'pull_request' }} && ${{ github.repository != 'penske-media-corp/github-workflows-wordpress' }}

    services:
      mysql:
        image: mysql:latest
        ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress

    strategy:
      fail-fast: false
      matrix:
        include:
          - php: '7.4'
            wordpress: 'latest'
            continue_on_error: false
          - php: '7.4'
            wordpress: 'nightly'
            continue_on_error: true
          - php: '8.0'
            wordpress: 'latest'
            continue_on_error: true
          - php: '8.0'
            wordpress: 'nightly'
            continue_on_error: true

    steps:
      - name: Prepare environment
        uses: penske-media-corp/github-action-wordpress-test-setup@add/action
        with:
          git_checkout_fetch_depth: 0
          php_version: ${{ matrix.php }}
          phpunit: 1
          ssh_key_encoded: "${{ secrets.BITBUCKET_READ_ONLY_SSH_KEY }}"

      - name: Set environment variables
        run: |
          echo "TMPDIR=${RUNNER_TEMP}" >> $GITHUB_ENV
          echo "WP_CORE_DIR=${RUNNER_TEMP}/wp/core" >> $GITHUB_ENV
          echo "WP_TESTS_DIR=${RUNNER_TEMP}/wp/tests-lib" >> $GITHUB_ENV

          if [[ -n "${PMC_IS_PMC_PLUGINS}" ]]; then
            echo "PMC_PHPUNIT_BOOTSTRAP=${GITHUB_WORKSPACE}/pmc-unit-test/bootstrap.php" >> $GITHUB_ENV
          else
            echo "PMC_PHPUNIT_BOOTSTRAP=${RUNNER_TEMP}/wp/core/wp-content/plugins/pmc-plugins/pmc-unit-test/bootstrap.php" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Set version cache key and cache path
        id: set-cache-info
        run: |
          echo "::set-output name=path::${TMPDIR}/wp"
          
          if [[ "${{ matrix.wordpress }}" == 'latest' ]]; then
            echo "::set-output name=version::$(curl https://api.wordpress.org/core/version-check/1.7/ | jq -r '.offers[0].version')"
          else
            echo "::set-output name=version::$(/bin/date -u "+%F")"
          fi
        shell: bash

      - name: Cache WordPress install
        id: cache-wordpress-install
        uses: actions/cache@v3
        with:
          path: ${{ steps.set-cache-info.outputs.path }}
          key: ${{ runner.os }}-version-${{ steps.set-cache-info.outputs.version }}-php-${{ matrix.php }}-wp-${{ matrix.wordpress }}-wordpress-install

      - name: Install WordPress
        if: ${{ steps.cache-wordpress-install.outputs.cache-hit != 'true' }}
        run: |
          SCRIPT_PATH="/usr/local/bin/install-wp-tests"
          curl -o "${SCRIPT_PATH}" https://raw.githubusercontent.com/wp-cli/scaffold-command/master/templates/install-wp-tests.sh
          chmod +x "${SCRIPT_PATH}"
          yes | "${SCRIPT_PATH}" wordpress root root 127.0.0.1 ${{ matrix.wordpress }}

      - name: Link Core Tech
        run: |
          WP_CONTENT_SOURCE_DIR="${GITHUB_WORKSPACE}/.cache/www/html/wp-content"
          WP_CONTENT_TARGET_DIR="${WP_CORE_DIR}/wp-content"
          ln -s "${WP_CONTENT_SOURCE_DIR}/mu-plugins/vip-go-mu-plugins-built" "${WP_CONTENT_TARGET_DIR}/mu-plugins"

          rm -rf "${WP_CONTENT_TARGET_DIR}/plugins"
          ln -s "${WP_CONTENT_SOURCE_DIR}/plugins/pmc-vip-go-plugins" "${WP_CONTENT_TARGET_DIR}/plugins"
          ln -s "${WP_CONTENT_SOURCE_DIR}/plugins/pmc-plugins" "${WP_CONTENT_TARGET_DIR}/plugins/pmc-plugins"

          if [[ ! -d "${WP_CONTENT_TARGET_DIR}/client-mu-plugins" ]]; then
            mkdir "${WP_CONTENT_TARGET_DIR}/client-mu-plugins"
          fi
          mv "${RUNNER_TEMP}/plugin-loader.php" "${WP_CONTENT_TARGET_DIR}/client-mu-plugins/plugin-loader.php"

          if [[ -d "${WP_CONTENT_SOURCE_DIR}/themes" ]]; then
            rm -rf "${WP_CONTENT_TARGET_DIR}/themes"
            ln -s "${WP_CONTENT_SOURCE_DIR}/themes" "${WP_CONTENT_TARGET_DIR}/themes"
          fi

      - name: Run PHPUnit
        continue-on-error: ${{ matrix.continue_on_error }}
        run: |
          export PMC_SKIP_INIT_BUILD=true
          export PMC_COMMIT_DIFF_FILE=/tmp/diff.txt
          . pmc-manifest

          . pmc-test-phpcs

      - name: Ensure version-controlled files are not modified during the tests
        run: git diff --exit-code
