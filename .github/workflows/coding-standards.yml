name: Coding Standards

on:
  workflow_call:
    secrets:
      BITBUCKET_READ_ONLY_SSH_KEY:
        required: true

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  # Runs PHP coding standards checks.
  #
  # Violations are reported inline with annotations.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Sets up PHP.
  # - Logs debug information.
  # - Configures caching for PHPCS scans.
  # - Installs Composer dependencies (use cache if possible).
  # - Make Composer packages available globally.
  # - Logs PHP_CodeSniffer debug information.
  # - Runs PHPCS on the full codebase with warnings suppressed.
  # - Runs PHPCS on the `tests` directory without warnings suppressed.
  # - Ensures version-controlled files are not modified or deleted.
  phpcs:
    name: PHP coding standards
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: ${{ github.event_name == 'pull_request' }} && ${{ github.repository != 'penske-media-corp/github-workflows-wordpress' }}

    steps:
      - uses: ethitter/test-composite-action@main
        with:
          ssh_key_encoded: ${{ secrets.BITBUCKET_READ_ONLY_SSH_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
            # Needed to produce list of changed files compared to default branch.
            fetch-depth: 0

      - name: Set up PHP
        uses: shivammathur/setup-php@3eda58347216592f618bb1dff277810b6698e4ca # v2.19.1
        with:
          php-version: '7.4'
          coverage: none
          tools: composer:1

      - name: Log debug information
        run: |
          php --version
          composer --version

      # This date is used to ensure that the PHPCS cache is cleared at least once every week.
      # http://man7.org/linux/man-pages/man1/date.1.html
      - name: "Get last Monday's date"
        id: get-date
        run: echo "::set-output name=date::$(/bin/date -u --date='last Mon' "+%F")"

      - name: Cache PHPCS scan cache
        uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d # v3.0.4
        with:
          path: .cache/phpcs.json
          key: ${{ runner.os }}-date-${{ steps.get-date.outputs.date }}-phpcs-cache-${{ hashFiles('**/composer.lock', 'phpcs.xml') }}

      - name: Install Composer dependencies
        uses: ramsey/composer-install@f680dac46551dffb2234a240d65ae806c2999dd6 # v2.1.0
        with:
          composer-options: "--no-progress --no-ansi --no-interaction"

      - name: Install diffFilter
        run: composer global require exussum12/coverage-checker

      - name: Make Composer packages available globally
        run: echo "${PWD}/vendor/bin" >> $GITHUB_PATH

      - name: Log PHPCS debug information
        run: |
          phpcs -i
          phpcs --config-show

      - name: Run PHPCS on all Core files
        run: |
          export PMC_SKIP_INIT_BUILD=true
          export PMC_COMMIT_DIFF_FILE=/tmp/diff.txt
          . pmc-manifest
        
          echo "$PHP_FILES" > /tmp/files-to-scan

          phpcs -s --file-list=/tmp/files-to-scan --report=json --report-json=/tmp/phpcs.json || true

          diffFilter --phpcsStrict "${PMC_COMMIT_DIFF_FILE}" /tmp/phpcs.json 100 2>&1

          # TODO: make this work, since above will exit. Also should be conditioned on there being errors to stop the pipeline.
          echo '************************'
          jq '.files' < /tmp/phpcs.json

      - name: Ensure version-controlled files are not modified during the tests
        run: git diff --exit-code

  # Runs the JavaScript coding standards checks.
  #
  # JSHint violations are not currently reported inline with annotations.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Logs debug information about the GitHub Action runner.
  # - Installs NodeJS.
  # - Logs updated debug information.
  # _ Installs NPM dependencies.
  # - Run the WordPress JSHint checks.
  # - Ensures version-controlled files are not modified or deleted.
#  jshint:
#    name: JavaScript coding standards
#    runs-on: ubuntu-latest
#    timeout-minutes: 20
#    if: ${{ github.repository == 'WordPress/wordpress-develop' || github.event_name == 'pull_request' }}
#    env:
#      PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: ${{ true }}
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
#
#      - name: Log debug information
#        run: |
#          npm --version
#          node --version
#          git --version
#          svn --version
#
#      - name: Install NodeJS
#        uses: actions/setup-node@eeb10cff27034e7acf239c5d29f62154018672fd # v3.3.0
#        with:
#          node-version-file: '.nvmrc'
#          cache: npm
#
#      - name: Log debug information
#        run: |
#          npm --version
#          node --version
#
#      - name: Install Dependencies
#        run: npm ci
#
#      - name: Run JSHint
#        run: npm run grunt jshint
#
#      - name: Ensure version-controlled files are not modified or deleted
#        run: git diff --exit-code
