name: QAT

on:
  workflow_call:
    inputs:
      QA_SITE_DOMAIN:
        default: ''
        description: 'QA Site Domain'
        required: false
        type: string
      THEME_NAME:
        default: ''
        description: 'WP Theme'
        required: false
        type: string

    secrets:
      BITBUCKET_READ_ONLY_SSH_KEY:
        required: false
      GITHUB_READ_ONLY_SSH_KEY:
        required: false
      CHECKLY_API_KEY:
        required: true
      CHECKLY_ACCOUNT_ID:
        required: true

permissions:
  contents: read

# Set the necessary credentials and export variables we can use to instrument our test run. Use the ENVIRONMENT_URL
# to run your checks against staging, preview or production.
# See https://www.checklyhq.com/docs/cli/command-line-reference/#npx-checkly-deploy and supporting documentation for
# more details on Checkly environment variables.
env:
  NPM_QAT_SCRIPT: "qat"
  FEATURE_BRANCH_NAME: $(echo "${{ github.head_ref || github.ref_name }}" | sed -e 's/feature\/\(.*\)/\1/' | tr '[:upper:]' '[:lower:]')
  CHECKLY_API_KEY: ${{ secrets.CHECKLY_API_KEY }}
  CHECKLY_ACCOUNT_ID: ${{ secrets.CHECKLY_ACCOUNT_ID }}
  ENVIRONMENT_URL: ${{ inputs.QA_SITE_DOMAIN }}
  CHECKLY_TEST_ENVIRONMENT: ${{ inputs.QA_SITE_DOMAIN }}
  CHECKLY_REPO_BRANCH: ${{ github.head_ref }}
  CHECKLY_REPO_COMMIT_OWNER: ${{ github.actor }}
  CHECKLY_REPO_SHA: ${{ github.sha }}
jobs:
  check-qat:
    name: Check for QAT
    runs-on: ubuntu-latest
    timeout-minutes: 90
    if: ${{ github.repository != 'penske-media-corp/github-workflows-wordpress' }}

    outputs:
      status: ${{ steps.check_files.outputs.files_exists }}

    concurrency:
      group: ${{ github.ref_name || github.run_id }}-qat-check
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Check out the full git history
      - name: Check for Checkly Config
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: "checkly.config.ts"

      - name: Checkly Config Found
        id: file_exists
        if: steps.check_files.outputs.files_exists == 'true'
        # Only runs if all of the files exists
        run: echo Checkly config found

      # Poll the PMCQA environment to wait for a deployment triggered by Jenkins to complete before continuing the workflow.
      # This ensures any later steps that interact with PMCQA reflect the code changes from the pull request rather than an older version.
      - name: Check PMCQA
        if: ${{ inputs.THEME_NAME  != '' && inputs.QA_SITE_DOMAIN != '' && steps.check_files.outputs.files_exists == 'true' }}
        timeout-minutes: 10
        run: |
          # `version-hash` is created by jenkins script when a branch is pushed
          # https://github.com/penske-media-corp/pmc-jenkins-scripts/blob/8ee0244a8485b61cfa6d3f9af00f7e6a55ddb042/bin/push-pmcqa-repo.sh#L36-L38
          hash_url="https://${{ env.FEATURE_BRANCH_NAME }}.${{ inputs.QA_SITE_DOMAIN }}/wp-content-vipgo-sites/${{ env.FEATURE_BRANCH_NAME }}/themes/vip/${{ inputs.THEME_NAME }}/version-hash"
          echo "HASH_URL: $hash_url"
          hash=`curl --no-progress-meter --insecure $hash_url`
          until [[ $hash == ${{ github.event.pull_request.head.sha }} ]]; do
              echo -n "Waiting for Jenkins Deployment ... \n"
              hash=`curl --no-progress-meter --insecure $hash_url`
              sleep 5
          done

  checkly-deploy:
    name: Checkly Run and Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 90
    # if the check_files step in the check-qat job doesn't fail
    if: needs.check-qat.steps.check_files.conclusion == 'true'

    concurrency:
      group: ${{ github.ref_name || github.run_id }}-checkly-qat
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Check out the full git history
      - uses: actions/setup-node@v3
        with:
          node-version: 16 # Checkly CLI requires Node.js 16 or higher.
      - name: Restore or cache node_modules # Restore node_modules cache if available
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies # Install NPM dependencies if cache miss
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run checks # Run Checkly checks and record test session
        id: run-checks
        run: npx checkly test -e ENVIRONMENT_URL=https://${{ env.FEATURE_BRANCH_NAME }}.${{ inputs.QA_SITE_DOMAIN }} -e CHECKLY_REPO_SHA=${{ env.CHECKLY_REPO_SHA }} --reporter=github --record
      - name: Create summary # Export Checkly report to GitHub job summary
        id: create-summary
        run: cat checkly-github-report.md > $GITHUB_STEP_SUMMARY
      - name: Deploy checks # Deploy checks to Checkly for debugging
        # Only run if the pull request is merging into the main branch
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        id: deploy-checks
        run: npx checkly deploy --force
